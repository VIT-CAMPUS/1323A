#include <stdio.h>

// Constants
#define PAGE_SIZE 10
#define MEMORY_SIZE 400

// Page table: maps virtual pages to real pages
int page_table[] = {11, 23, 5}; // Virtual pages 0, 1, 2

// Function to translate a virtual address to a real address
int translate_address(int virtual_address) {
    int page_number = virtual_address / PAGE_SIZE;
    int offset = virtual_address % PAGE_SIZE;

    if (page_number < 0 || page_number >= sizeof(page_table) / sizeof(page_table[0])) {
        printf("Error: Invalid virtual address %d (page number out of bounds).\n", virtual_address);
        return -1; // Error code
    }

    int real_page = page_table[page_number];
    int real_address = real_page * PAGE_SIZE + offset;

    return real_address;
}

// Simulated program to print a message
void print_welcome_message() {
    printf("Welcome to the Virtual Machine!\n");
}

int main() {
    // Example: Print a welcome message
    printf("Executing program...\n");
    print_welcome_message();

    // Example: Translate a virtual address
    int virtual_address = 12; // Example virtual address
    printf("Translating virtual address %d...\n", virtual_address);
    int real_address = translate_address(virtual_address);

    if (real_address != -1) {
        printf("Real address: %d\n", real_address);
    }

    return 0;
}
